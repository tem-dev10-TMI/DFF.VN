Thanh toán & E-commerce bằng crypto
================================================================================
1) TÓM TẮT NGẮN
- Merchant hiển thị giá bằng fiat (VND, USD…), chuyển sang tương đương crypto theo thời gian thực (rate_timestamped), tạo invoice chứa: address, amount_crypto, qr, expires_at.  
- Thanh toán on-chain: khách quét QR/chuyển token → system watch txid → khi đủ confirmations cập nhật invoice là paid → (tuỳ policy) auto-convert hoặc giữ bằng crypto.  
- Stablecoin (USDT/USDC) + L2 (Lightning/zk-rollups) là lựa chọn phổ biến để giảm biến động & phí.  
- Ở VN: nhiều giao dịch thực tế settlement off-chain qua OTC/P2P, QR nội địa, hoặc convert qua ngân hàng trước khi ship hàng. **Lưu ý pháp lý:** crypto không phải phương tiện thanh toán hợp pháp tại VN — xem phần Compliance.

================================================================================
2) LUỒNG THANH TOÁN (Invoice lifecycle)
1. Customer chọn crypto tại checkout → backend gọi pricing engine với amount_fiat, order_id, selected_asset, callback.
2. Pricing engine lấy price (spot) từ source (exchange/aggregator), tính amount_crypto = amount_fiat / price * (1 + fee_markup). Ghi `rate_timestamp`.
3. Backend tạo invoice record + tạo địa chỉ nhận duy nhất (HD wallet derive new address per invoice) hoặc provider (gateway) trả về address + qr + expires_at.
4. Frontend hiển thị QR + copy address + timer. Gửi email/SMS có link invoice.
5. Customer gửi tx → on-chain watcher detect txid → validate token contract, to_address, amount ± tolerance → update confirmations count.
6. Khi đạt required_confirmations → mark invoice confirmed → (a) nếu merchant muốn fiat settlement thì submit convert order tại exchange/OTC; (b) nếu merchant giữ crypto, update treasury.
7. Nếu invoice timeouts → mark expired; nếu customer gửi sau expiry → create new invoice or auto-handle per policy.

================================================================================
3) TÍNH TOÁN GIÁ & PHÍ (pricing engine)
- Inputs: amount_fiat, spot_price_usd (from provider), fx_rate (VND/USD), network_fee_estimate, provider_spread, merchant_markup.
- Example formula:
  amount_crypto = (amount_fiat / fx_rate_to_usd) / spot_price_usd  * (1 + merchant_markup)
  displayed_total = amount_crypto + network_fee_estimate (or show fee separately)
- Tolerance/rounding: allow tiny rounding tolerance (e.g., 0.2%); for token with decimals, round up/down correctly.
- Expiry: common 5–30 minutes (shorter if volatile). For L2/lightning, expiry can be shorter.

================================================================================
4) ASSETS & CHAINS — NÊN CHẤP NHẬN (gợi ý)
- **Stablecoins (ưu tiên):** USDT (TRC20, ERC20), USDC (ERC20, Arbitrum, Solana), BUSD — ưu tiên chain phí thấp cho UX (TRON, BSC, Solana, L2s).  
- **Major coins (optional):** BTC, ETH — nhưng ETH gas cao → encourage L2/zk or stablecoin.  
- **Layer-2 options:** Lightning Network (BTC) cho micropayments; Arbitrum/Optimism/zkSync cho ETH L2; Polygon PoS for low fees (caveat: security model).  
- **Avoid / control:** privacy coins (Monero), low-liquidity tokens, newly minted memecoins for payments — high risk of rug / volatility.

================================================================================
5) L2 & Bitcoin Lightning (chi tiết)
- **Lightning (BTC):** near-instant, micropayments, low fee; requires merchant to run Lightning node or use provider (OpenNode, Bitrefill). UX: invoice LNURL/BOLT11/QR. Risk: channel liquidity, routing failure; custodial LN providers trade convenience vs custody risk.
- **zk-rollups / optimistic rollups (ETH):** cheap tx & security anchored to L1. Withdrawal from optimistic rollups may have challenge period (delay), zk-rollups have faster finality. For checkout, consider L2 native receipts or use bridges/providers offering instant settlement.

================================================================================
6) PAYMENT PROCESSORS — so sánh nhanh (tổng quan)
- **Coinbase Commerce:** multi-coin, webhook, merchant auto-convert to fiat (optional via Coinbase account), easy SDKs. Fee: variable (often ~1%). (Use for ease.)  
- **BitPay:** focus on B2B, supports settlements to fiat, invoicing API, KYC for higher volumes.  
- **NOWPayments / CoinPayments / OpenNode / BTCPay:** tradeoffs: fees, self-hosted option (BTCPay) → no custodian (lower fees) but needs ops.  
- **Custodial vs Self-hosted:** custodial (easy, less ops), self-hosted (BTCPay) = more control, lower fees, more compliance work.

================================================================================
7) XÁC NHẬN ON-CHAIN & SỐ BLOCK (confirmations)
- **Guideline confirmations (configurable):**
  - BTC: 1 for small (<$100), 2–6 for medium/large; 6 for high value.
  - ETH/ERC20: 5–12 confirmations.
  - TRC20 (Tron) / BSC: 1–3 confirmations.
  - L2 / Lightning: instant/2-way settlement semantics depend on provider (no block confirmations).
- **Considerations:** larger amounts → more confirmations; more assurance when address is known cold/custodial; if provider does settlement to fiat, rely on provider's confirmations policy.

================================================================================
8) REFUND & DISPUTES (policy templates & flow)
- **Key principles:**
  - On-chain transactions are irreversible → refunds require sending new tx out.  
  - Refund only to the original sending address and same chain/token (unless agreed otherwise).  
  - Require KYC & identity verification for refunds above threshold.
- **Refund flow (recommended):**
  1. Customer opens request → provide evidence (txid, order id, reason).
  2. Compliance verifies KYC & tx origin (check that requesting account is same as sender).
  3. If approved, create refund invoice (show network fee & that customer bears fee or merchant bears—policy).  
  4. Refund tx executed from merchant's hot wallet OR from custodial provider with record.  
- **Dispute mitigations:** keep full audit logs (webhooks, IP, wallet addresses, signed messages), record communications, timestamped screenshots.

================================================================================
9) FRAUD & RỦI RO (và mitigation)
- **Chargeback fraud:** on-chain payments cannot be charged back; but off-chain settlement (bank transfer) can → require proof of on-chain tx before shipping. If merchant accepts off-chain bank transfer for crypto settlement (common VN OTC), risk of chargeback exists.
  - Mitigation: require on-chain txid as primary evidence; delay shipment until on-chain tx confirmed & converted into fiat settled in bank account.
- **Mempool double-spend / RBF (Replace-By-Fee):** for BTC, accept additional confirmations for higher security; block RBF inputs or detect RBF.
- **Underpay/Overpay handling:** define tolerance (e.g., ±0.5%). Underpay → create top-up invoice or mark pending. Overpay → refund or credit per policy.
- **Fake payment screenshots (OTC):** always verify on-chain txid + confirmations; do not rely on screenshots.
- **Peg risk (stablecoin depeg):** monitor price feed; pause acceptance if deviation > threshold (e.g., 1–2%). Use multiple price oracles.

================================================================================
10) TREASURY & SETTLEMENT
- **Options:**
  - Hold crypto (exposure to volatility). Set exposure caps (e.g., hold ≤ X% revenue in crypto).
  - Auto-convert to fiat via exchange/OTC (instant settlement) → protects merchant from volatility but incurs fees & KYC obligations.
  - Hybrid: retain small operational buffer, convert rest.
- **Auto-convert rules examples:**
  - Auto-convert when invoice confirmed and amount_usd > $Z.
  - Auto-convert if 30d realized volatility > threshold.
  - Scheduled daily batched convert at favorable liquidity windows.
- **Accounting:** store `price_used`, `rate_timestamp`, exchange_fill_id, fees, net settled fiat; keep records for tax/audit.

================================================================================
11) TECHNICAL INTEGRATION — API, watchers & webhooks (best practices)
- **Invoice API:** POST /invoices {order_id, amount_fiat, currency, callback_url} → returns invoice_id, address, amount_crypto, expires_at, qr.
- **Watcher:** safe, idempotent on-chain watcher that:
  - listens to incoming txs for address/contract,
  - verifies token contract & amount,
  - saves txid, block_number, confirmations,
  - validates signature on webhook from provider.
- **Webhook best practices:**
  - Authenticate with HMAC signature header (e.g., X-Signature) over raw body; verify on server.
  - Idempotency: store `webhook_id`/`invoice_id`; ignore duplicates.
  - Log raw payloads immutable for audit.
- **Address management:** use HD wallets (xpub) to derive unique address per invoice → privacy & easier reconciliation.

================================================================================
12) DB / JSON / SQL — mẫu (copy-paste)

A. JSON invoice example
{
  "invoice_id": "INV-20250916-001",
  "order_id": "ORD-1001",
  "amount_fiat": 1500000,
  "fiat_currency": "VND",
  "asset": "USDT-TRC20",
  "amount_crypto": 50.0,
  "address": "TXy...trcAddress",
  "qr_code": "data:image/png;base64,...",
  "rate_provider": "CoinGecko",
  "price_usd": 1.0,
  "rate_timestamp": "2025-09-16T08:00:00+07:00",
  "expires_at": "2025-09-16T08:15:00+07:00",
  "status": "created"
}

B. SQL (payments table)
CREATE TABLE crypto_payments (
  id SERIAL PRIMARY KEY,
  invoice_id VARCHAR(64) UNIQUE,
  order_id VARCHAR(64),
  provider VARCHAR(64),
  address VARCHAR(128),
  asset VARCHAR(64),
  amount_crypto DECIMAL(36,18),
  amount_fiat DECIMAL(18,2),
  fiat_currency VARCHAR(8),
  price_used DECIMAL(30,12),
  rate_timestamp TIMESTAMP,
  txid VARCHAR(128),
  confirmations INT DEFAULT 0,
  status VARCHAR(32), -- created,pending,confirmed,completed,refunded,expired,failed
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

================================================================================
13) CODE MẪU — VERIFY TX & CONFIRMATION (pseudo Python)
```python
from web3 import Web3
w3 = Web3(Web3.HTTPProvider(RPC_URL))

def check_erc20_transfer(tx_hash, expected_to, expected_amount, token_contract, required_confirms=6):
    tx = w3.eth.get_transaction(tx_hash)
    # For ERC20, check logs (Transfer event)
    receipt = w3.eth.get_transaction_receipt(tx_hash)
    for log in receipt.logs:
        if log.address.lower() == token_contract.lower():
            # decode Transfer event -> from,to,value
            from_addr, to_addr, value = decode_transfer_log(log)
            if to_addr.lower() == expected_to.lower() and value == expected_amount:
                confirmations = w3.eth.block_number - receipt.blockNumber + 1
                return True, confirmations
    return False, 0
(Trong production: use robust decoding, reorg handling, retry & indexer fallback.)

================================================================================
14) MONITORING & KPI

Invoice created / paid / expired rates.

Time to confirmation (median & p95).

Failed payments (wrong chain, underpay).

Hot wallet balance vs threshold.

Auto-convert execution latency & slippage.

Number of refund requests & fraud rate.

Stablecoin peg deviation events.

================================================================================
15) UX & COMMUNICATION (checkout copy examples)

Prominent: “Số tiền (VND): 1,500,000 — Tương đương: 50 USDT (TRC20) — Rate cập nhật 08:00 ICT — Hết hạn: 15 phút”

Warnings: “Lưu ý: giao dịch crypto không thể hoàn tác on-chain. Vui lòng kiểm tra txid & confirmations. Nếu bạn thanh toán bằng chain khác, tiền sẽ không tự động tới cửa hàng.”

If high fees/volatility: show banner with suggested alternative (e.g., “ETH gas hiện cao — gợi ý dùng USDT-TRC20 hoặc L2”).

================================================================================
16) COMPLIANCE / VN-SPECIFIC CONSIDERATIONS

Legal: tại VN crypto không phải phương tiện thanh toán hợp pháp — merchant cần cẩn trọng khi hiển thị “chấp nhận crypto”. (tham khảo luật & counsel).

KYC/AML: nếu merchant tự thực hiện settlements hoặc sử dụng OTC/CEX để convert → đối tác phải có AML/KYC. Yêu cầu collection of customer KYC cho refund/large orders.

Tax & accounting: lưu rate_timestamped, txid, exchange fill ids, bank statements; nhất quán chính sách hạch toán (giá quy đổi tại thời điểm nhận).

OTC/P2P realities in VN: nhiều giao dịch nội bộ sử dụng chuyển khoản ngân hàng + xác nhận trên Telegram/Zalo — rất rủi ro: ALWAYS yêu cầu on-chain txid nếu phương thức là crypto; nếu settlement bằng ngân hàng, chờ funds cleared & finality (no chargeback).

================================================================================
17) RISK SCENARIOS & PLAYBOOK NGẮN

Gas spike / fee > threshold: temporarily disable ERC20 checkout OR switch to L2/tron/BSC; notify customers.

Stablecoin depeg: pause acceptance of that stablecoin; notify finance/legal; compute exposures.

Whale sell to exchange detected: increase confirmations for large invoices; consider urgent hedging.

OTC dispute (customer claims paid but not received): ask for txid, check on-chain, check recipient address, confirm block confirmations; if no txid, treat as unpaid.

================================================================================
18) CANNED CHATBOT / CS REPLIES (copy-ready)

Q: “Tôi đã chuyển tiền nhưng trạng thái vẫn chưa cập nhật”
A: “Bạn vui lòng gửi cho mình txid (mã giao dịch) và chain (ví dụ: TRON, BSC). Mình sẽ kiểm tra số xác nhận và báo lại. Lưu ý: một số chain cần vài xác nhận để hệ thống tự động cập nhật.”

Q: “Tôi quét nhầm QR chain khác thì sao?”
A: “Nếu bạn gửi tới địa chỉ của merchant trên chain khác (ví dụ gửi ETH tới địa chỉ TRON), giao dịch rất có thể không tự động đến. Gửi txid cho mình — team kỹ thuật sẽ kiểm tra khả năng hồi tiền, nhưng phần lớn trường hợp tiền không thể phục hồi tự động.”

Q: “Làm sao tôi lấy refund?”
A: “Gửi yêu cầu refund tại link [Support], kèm txid và KYC (nếu yêu cầu). Refund sẽ được thực hiện về cùng address/chain sau khi xác minh — merchant có thể tính phí mạng cho refund.”

================================================================================
19) CHECKLIST TỔNG HỢP (copy/paste)

 Xác định assets/chains whitelist (stablecoin ưu tiên).

 Implement HD wallet per-invoice address derivation.

 Build robust on-chain watcher + indexer fallback.

 Implement HMAC webhook verification + idempotency.

 Define confirmations policy per chain & per amount.

 Define auto-convert & treasury rules; set exposure caps.

 Implement refund policy + KYC thresholds.

 Monitor stablecoin peg & exchange flows.

 UX: show fiat, crypto, rate_timestamp, expiry, network fee.

 Compliance: keep audit trail for tax & regulator; consult local counsel (VN).

================================================================================
20) KẾT LUẬN
Thanh toán bằng crypto cho e-commerce mang lại lợi ích (thanh toán xuyên biên giới, chi phí thu nhỏ đối với L2/stablecoin) nhưng đòi hỏi thiết kế vững chắc: rate engine chính xác, on-chain watcher đáng tin cậy, treasury & hedging policy, refund/dispute rules và tuân thủ pháp lý (đặc biệt tại VN). Bắt đầu bằng whitelist token/chain, HD wallet per-invoice, webhook security, và gradually add auto-convert + treasury hedges.